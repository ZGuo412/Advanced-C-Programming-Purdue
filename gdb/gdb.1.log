Starting program:  
No executable file specified.
Use the "file" or "exec-file" command.
Starting program:  Starting program: .../prime_factor
No executable file specified.
Use the "file" or "exec-file" command.
Starting program:  Starting program: .../prime_factor
No executable file specified.
Use the "file" or "exec-file" command.
Starting program:  prime_factor
No executable file specified.
Use the "file" or "exec-file" command.
Starting program:  .../prime_factor
No executable file specified.
Use the "file" or "exec-file" command.
Starting program:  .../prime_factor
No executable file specified.
Use the "file" or "exec-file" command.
Starting program:  .../prime_factor
No executable file specified.
Use the "file" or "exec-file" command.
Undefined command: "Starting".  Try "help".
Starting program:  ./prime_factor
No executable file specified.
Use the "file" or "exec-file" command.
Starting program:  ./prime_factor
No executable file specified.
Use the "file" or "exec-file" command.
Error detected on fd 0
error detected on stdin
Starting program: /home/shay/a/guo412/hw01/prime_factor 

Program received signal SIGINT, Interrupt.
0x0000003e1a24efa0 in printf () from /lib64/libc.so.6
#0  0x0000003e1a24efa0 in printf () from /lib64/libc.so.6
#1  0x0000000000400658 in print_prime_factors (n=0) at prime_factor.c:29
#2  0x00000000004006f7 in main (argc=1, argv=0x7fffffffe3e8)
    at test_prime_factor.c:7
#1  0x0000000000400658 in print_prime_factors (n=0) at prime_factor.c:29
29	                printf(" %d", 2);
24	            printf(" (none)");
25	        }
26	        else {
27	            // Print all occurrences of 2 in the prime factorization
28	            while(n % 2 == 0) {
29	                printf(" %d", 2);
30	                n %= 2;  // Divide n by 2 (integer division)
31	            }
32	
33	            // Try all odd integers, from 3 to sqrt(n)
No symbol "locals" in current context.
No symbol "local" in current context.
$1 = 0
No symbol "local" in current context.
No symbol "variables" in current context.
$2 = 0
Function "prime_factor" not defined.
Breakpoint 1 at 0x4006ed: file test_prime_factor.c, line 7.
Program not restarted.
Not confirmed.
Starting program: /home/shay/a/guo412/hw01/prime_factor 

Breakpoint 1, main (argc=1, argv=0x7fffffffe3e8) at test_prime_factor.c:7
7		print_prime_factors(6);
print_prime_factors (n=6) at prime_factor.c:17
17	    if(n <= 0) {
Breakpoint 2 at 0x400669: file prime_factor.c, line 28.
Note: breakpoint 2 also set at pc 0x400669.
Breakpoint 3 at 0x400669: file prime_factor.c, line 28.
$3 = 0
21	        printf("Prime factors of %d:", n);
Note: breakpoints 2 and 3 also set at pc 0x400669.
Breakpoint 4 at 0x400669: file prime_factor.c, line 28.
Starting program: /home/shay/a/guo412/hw01/prime_factor 

Breakpoint 1, main (argc=1, argv=0x7fffffffe3e8) at test_prime_factor.c:7
7		print_prime_factors(6);
Undefined command: "continuing".  Try "help".
Argument required (a breakpoint number).
Second argument (specified ignore-count) is missing.
2	#include <stdio.h>
3	#include <stdlib.h>
4	#include "prime_factor.h"
5	
6	int main(int argc, char* argv[]) {
7		print_prime_factors(6);
8		print_prime_factors(1);  // should report "(none)"
9		print_prime_factors(0);  // should report "(none)"
10		print_prime_factors(48); // 2 2 2 2 3
11		print_prime_factors(49); // 7 7 (square number)
Starting program: /home/shay/a/guo412/hw01/prime_factor 

Breakpoint 1, main (argc=1, argv=0x7fffffffe3e8) at test_prime_factor.c:7
7		print_prime_factors(6);
Starting program: /home/shay/a/guo412/hw01/prime_factor 

Program received signal SIGINT, Interrupt.
0x0000003e1a2db7d0 in __write_nocancel () from /lib64/libc.so.6
Undefined command: "lisjt".  Try "help".
2	#include <stdio.h>
3	#include <stdlib.h>
4	#include "prime_factor.h"
5	
6	int main(int argc, char* argv[]) {
7		print_prime_factors(6);
8		print_prime_factors(1);  // should report "(none)"
9		print_prime_factors(0);  // should report "(none)"
10		print_prime_factors(48); // 2 2 2 2 3
11		print_prime_factors(49); // 7 7 (square number)
#0  0x0000003e1a2db7d0 in __write_nocancel () from /lib64/libc.so.6
#1  0x0000003e1a271943 in _IO_new_file_write () from /lib64/libc.so.6
#2  0x0000003e1a272ef5 in _IO_new_do_write () from /lib64/libc.so.6
#3  0x0000003e1a2715bd in _IO_new_file_xsputn () from /lib64/libc.so.6
#4  0x0000003e1a245018 in vfprintf () from /lib64/libc.so.6
#5  0x0000003e1a24effa in printf () from /lib64/libc.so.6
#6  0x0000000000400658 in print_prime_factors (n=0) at prime_factor.c:29
#7  0x00000000004006f7 in main (argc=1, argv=0x7fffffffe3e8)
    at test_prime_factor.c:7
#6  0x0000000000400658 in print_prime_factors (n=0) at prime_factor.c:29
29	                printf(" %d", 2);
24	            printf(" (none)");
25	        }
26	        else {
27	            // Print all occurrences of 2 in the prime factorization
28	            while(n % 2 == 0) {
29	                printf(" %d", 2);
30	                n %= 2;  // Divide n by 2 (integer division)
31	            }
32	
33	            // Try all odd integers, from 3 to sqrt(n)
No symbol "locals" in current context.
$4 = 0
Note: breakpoint 1 (disabled) also set at pc 0x4006ed.
Breakpoint 5 at 0x4006ed: file test_prime_factor.c, line 7.
Starting program: /home/shay/a/guo412/hw01/prime_factor 

Breakpoint 5, main (argc=1, argv=0x7fffffffe3e8) at test_prime_factor.c:7
7		print_prime_factors(6);
Starting program: /home/shay/a/guo412/hw01/prime_factor 

Program received signal SIGINT, Interrupt.
0x0000003e1a271580 in _IO_new_file_xsputn () from /lib64/libc.so.6
#0  0x0000003e1a271580 in _IO_new_file_xsputn () from /lib64/libc.so.6
#1  0x0000003e1a245018 in vfprintf () from /lib64/libc.so.6
#2  0x0000003e1a24effa in printf () from /lib64/libc.so.6
#3  0x0000000000400658 in print_prime_factors (n=0) at prime_factor.c:29
#4  0x00000000004006f7 in main (argc=1, argv=0x7fffffffe3e8)
    at test_prime_factor.c:7
#3  0x0000000000400658 in print_prime_factors (n=0) at prime_factor.c:29
29	                printf(" %d", 2);
24	            printf(" (none)");
25	        }
26	        else {
27	            // Print all occurrences of 2 in the prime factorization
28	            while(n % 2 == 0) {
29	                printf(" %d", 2);
30	                n %= 2;  // Divide n by 2 (integer division)
31	            }
32	
33	            // Try all odd integers, from 3 to sqrt(n)
$5 = 0
Note: breakpoints 1 (disabled) and 5 (disabled) also set at pc 0x4006ed.
Breakpoint 6 at 0x4006ed: file test_prime_factor.c, line 7.
Starting program: /home/shay/a/guo412/hw01/prime_factor 

Breakpoint 6, main (argc=1, argv=0x7fffffffe3e8) at test_prime_factor.c:7
7		print_prime_factors(6);
print_prime_factors (n=6) at prime_factor.c:17
17	    if(n <= 0) {
12	|*           This is about finding bugs.             *|
13	|*                                                   *|
14	\*****************************************************/
15	
16	void print_prime_factors(int n) {
17	    if(n <= 0) {
18	        printf("Only positive numbers are supported.\n");
19	    }
20	    else {
21	        printf("Prime factors of %d:", n);
22	
23	        if(n == 1) {
24	            printf(" (none)");
25	        }
26	        else {
27	            // Print all occurrences of 2 in the prime factorization
28	            while(n % 2 == 0) {
29	                printf(" %d", 2);
30	                n %= 2;  // Divide n by 2 (integer division)
31	            }
Note: breakpoints 2 (disabled), 3 (disabled) and 4 (disabled) also set at pc 0x400669.
Breakpoint 7 at 0x400669: file prime_factor.c, line 28.
Starting program: /home/shay/a/guo412/hw01/prime_factor 

Breakpoint 6, main (argc=1, argv=0x7fffffffe3e8) at test_prime_factor.c:7
7		print_prime_factors(6);

Breakpoint 7, print_prime_factors (n=6) at prime_factor.c:28
28	            while(n % 2 == 0) {
$6 = 6
29	                printf(" %d", 2);
30	                n %= 2;  // Divide n by 2 (integer division)
$7 = 6

Breakpoint 7, print_prime_factors (n=0) at prime_factor.c:28
28	            while(n % 2 == 0) {
$8 = 0
Not confirmed.
